import{_ as i,c as a,o as n,b2 as l}from"./chunks/framework.CF7B9edl.js";const g=JSON.parse('{"title":"Axios","description":"","frontmatter":{},"headers":[],"relativePath":"zh/others/Axios/Index.md","filePath":"zh/others/Axios/Index.md","lastUpdated":1743592662000}'),p={name:"zh/others/Axios/Index.md"};function h(e,s,t,k,r,D){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="axios" tabindex="-1">Axios <a class="header-anchor" href="#axios" aria-label="Permalink to &quot;Axios&quot;">​</a></h1><h2 id="官网-axios-中文文档-axios-中文网-axios-http-cn" tabindex="-1">官网：<a href="https://www.axios-http.cn/" target="_blank" rel="noreferrer">Axios 中文文档 | Axios 中文网 (axios-http.cn)</a> <a class="header-anchor" href="#官网-axios-中文文档-axios-中文网-axios-http-cn" aria-label="Permalink to &quot;官网：[Axios 中文文档 | Axios 中文网 (axios-http.cn)](https://www.axios-http.cn/)&quot;">​</a></h2><p>一个基于<a href="https://javascript.info/promise-basics" target="_blank" rel="noreferrer"><em>promise</em></a><em>的网络</em>请求库</p><p>是<a href="https://www.lullabot.com/articles/what-is-an-isomorphic-application" target="_blank" rel="noreferrer"><em>isomorphic</em></a> 的(即同一套代码可以运行在浏览器和 node.js 中)。在服务端它使用原生 node.js <code>http</code> 模块, 而在客户端 (浏览端) 则使用 XMLHttpRequests。</p><h2 id="特点" tabindex="-1">特点： <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点：&quot;">​</a></h2><ul><li>不同环境不同实现：nodejs( <a href="http://nodejs.org/api/http.html" target="_blank" rel="noreferrer">http</a> 请求)、浏览器( <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest" target="_blank" rel="noreferrer">XMLHttpRequests</a>)</li><li>基于 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">Promise</a> 也支持 Promise API</li><li>拦截请求和响应</li><li>转换请求和响应数据</li><li>取消请求</li><li>超时处理</li><li>查询参数序列化支持嵌套项处理</li><li>自动将请求体序列化为： <ul><li>JSON (<code>application/json</code>)</li><li>Multipart / FormData (<code>multipart/form-data</code>)</li><li>URL encoded form (<code>application/x-www-form-urlencoded</code>)</li></ul></li><li>将 HTML Form 转换成 JSON 进行请求</li><li>自动转换 JSON 数据</li><li>获取浏览器和 node.js 的请求进度，并提供额外的信息（速度、剩余时间）</li><li>为 node.js 设置带宽限制</li><li>兼容符合规范的 FormData 和 Blob（包括 node.js）</li><li>客户端支持防御<a href="http://en.wikipedia.org/wiki/Cross-site_request_forgery" target="_blank" rel="noreferrer">XSRF</a></li></ul><h2 id="模块化安装" tabindex="-1">模块化安装： <a class="header-anchor" href="#模块化安装" aria-label="Permalink to &quot;模块化安装：&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes OneLight dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> axios</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">bower</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> axios</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">yarn</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> axios</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="cdn" tabindex="-1">cdn <a class="header-anchor" href="#cdn" aria-label="Permalink to &quot;cdn&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="复制代码" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes OneLight dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#808080;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#569CD6;">script</span><span style="--shiki-light:#986801;--shiki-dark:#9CDCFE;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#808080;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#569CD6;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#808080;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#569CD6;">script</span><span style="--shiki-light:#986801;--shiki-dark:#9CDCFE;"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#808080;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#569CD6;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#808080;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="导入" tabindex="-1">导入: <a class="header-anchor" href="#导入" aria-label="Permalink to &quot;导入:&quot;">​</a></h2><h3 id="es6" tabindex="-1">Es6: <a class="header-anchor" href="#es6" aria-label="Permalink to &quot;Es6:&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="复制代码" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes OneLight dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C586C0;">import</span><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;"> axios</span><span style="--shiki-light:#A626A4;--shiki-dark:#C586C0;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;axios&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="require-导入预构建的-commonjs-模块" tabindex="-1"><code>require</code> 导入预构建的 CommonJS 模块: <a class="header-anchor" href="#require-导入预构建的-commonjs-模块" aria-label="Permalink to &quot;\`require\` 导入预构建的 CommonJS 模块:&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="复制代码" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes OneLight dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#986801;--shiki-dark:#4FC1FF;"> axios</span><span style="--shiki-light:#0184BC;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;">&#39;axios/dist/browser/axios.cjs&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;">// browser</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#986801;--shiki-dark:#4FC1FF;"> axios</span><span style="--shiki-light:#0184BC;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;">&#39;axios/dist/node/axios.cjs&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;">// node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="axios-原生写法" tabindex="-1">axios 原生写法 <a class="header-anchor" href="#axios-原生写法" aria-label="Permalink to &quot;axios 原生写法&quot;">​</a></h2><h3 id="_1-get-请求" tabindex="-1">1. GET 请求 <a class="header-anchor" href="#_1-get-请求" aria-label="Permalink to &quot;1. GET 请求&quot;">​</a></h3><p><strong>使用场景：</strong></p><ul><li>获取用户信息、商品列表、文章详情等数据查询操作</li><li>搜索功能的实现</li><li>页面初始化数据的加载</li></ul><p><strong>优点：</strong></p><ul><li>请求可以被浏览器缓存</li><li>可以添加到浏览器收藏夹</li><li>参数直观，便于调试</li></ul><p><strong>缺点：</strong></p><ul><li>URL 长度受限制</li><li>参数暴露在 URL 中，不适合传输敏感数据</li><li>参数类型受限，无法传输复杂数据结构</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="复制代码" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes OneLight dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">axios</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    method</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;get&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    url</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#986801;--shiki-dark:#4FC1FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#0184BC;--shiki-dark:#D4D4D4;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;/api/get&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    headers</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {},</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    params</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#9CDCFE;"> params</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;"> // 参数会自动转换为查询字符串</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">then</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;">&#39;获取数据成功&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_2-post-请求" tabindex="-1">2. POST 请求 <a class="header-anchor" href="#_2-post-请求" aria-label="Permalink to &quot;2. POST 请求&quot;">​</a></h3><p><strong>使用场景：</strong></p><ul><li>用户登录注册</li><li>提交表单数据</li><li>上传文件</li><li>创建新的资源</li></ul><p><strong>优点：</strong></p><ul><li>可以传输大量数据</li><li>支持多种数据格式（JSON、FormData 等）</li><li>数据在请求体中，相对安全</li></ul><p><strong>缺点：</strong></p><ul><li>不能被浏览器缓存</li><li>相比 GET 请求消耗更多服务器资源</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="复制代码" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes OneLight dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">axios</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    method</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;post&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    url</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#986801;--shiki-dark:#4FC1FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#0184BC;--shiki-dark:#D4D4D4;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;/api/post&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    headers</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {},</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    data</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#9CDCFE;"> params</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;"> // 数据在请求体中传输</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">then</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;">&#39;数据提交成功&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_3-put-请求" tabindex="-1">3. PUT 请求 <a class="header-anchor" href="#_3-put-请求" aria-label="Permalink to &quot;3. PUT 请求&quot;">​</a></h3><p><strong>使用场景：</strong></p><ul><li>更新用户完整信息</li><li>替换服务器上的资源</li><li>需要幂等性的完整更新操作</li></ul><p><strong>优点：</strong></p><ul><li>具有幂等性，多次请求结果一致</li><li>语义明确，表示完整替换</li></ul><p><strong>缺点：</strong></p><ul><li>需要传输完整的资源数据</li><li>不适合部分更新</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="复制代码" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes OneLight dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">axios</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    method</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;put&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    url</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#986801;--shiki-dark:#4FC1FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#0184BC;--shiki-dark:#D4D4D4;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;/api/update&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    headers</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {},</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    data</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#9CDCFE;"> params</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">then</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;">&#39;更新数据成功&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_4-delete-请求" tabindex="-1">4. DELETE 请求 <a class="header-anchor" href="#_4-delete-请求" aria-label="Permalink to &quot;4. DELETE 请求&quot;">​</a></h3><p><strong>使用场景：</strong></p><ul><li>删除用户账号</li><li>删除文章或评论</li><li>取消订单</li><li>清除缓存</li></ul><p><strong>优点：</strong></p><ul><li>语义明确</li><li>幂等性，多次删除结果一致</li><li>一般只需要传递资源 ID</li></ul><p><strong>缺点：</strong></p><ul><li>操作不可逆</li><li>需要严格的权限控制</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="复制代码" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes OneLight dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">axios</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    method</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;delete&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    url</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#986801;--shiki-dark:#4FC1FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#0184BC;--shiki-dark:#D4D4D4;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;/api/delete&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    headers</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {},</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    params</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#9CDCFE;"> params</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;"> // DELETE请求通常使用params传参</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">then</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;">&#39;删除数据成功&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_5-patch-请求" tabindex="-1">5. PATCH 请求 <a class="header-anchor" href="#_5-patch-请求" aria-label="Permalink to &quot;5. PATCH 请求&quot;">​</a></h3><p><strong>使用场景：</strong></p><ul><li>修改用户部分信息</li><li>更新文章部分内容</li><li>状态标记的修改</li></ul><p><strong>优点：</strong></p><ul><li>只需要传输需要更新的字段</li><li>节省带宽</li><li>适合频繁的小更新</li></ul><p><strong>缺点：</strong></p><ul><li>不具有幂等性</li><li>部分服务器可能不支持</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="复制代码" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes OneLight dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">axios</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    method</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;patch&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    url</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#986801;--shiki-dark:#4FC1FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#0184BC;--shiki-dark:#D4D4D4;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;/api/patch&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    headers</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {},</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    data</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#9CDCFE;"> params</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">then</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;">&#39;部分更新数据成功&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_6-head-请求" tabindex="-1">6. HEAD 请求 <a class="header-anchor" href="#_6-head-请求" aria-label="Permalink to &quot;6. HEAD 请求&quot;">​</a></h3><p><strong>使用场景：</strong></p><ul><li>检查资源是否存在</li><li>获取文件大小等元信息</li><li>检查资源是否更新</li></ul><p><strong>优点：</strong></p><ul><li>不返回响应体，节省带宽</li><li>快速获取资源信息</li><li>适合预检请求</li></ul><p><strong>缺点：</strong></p><ul><li>只能获取响应头信息</li><li>使用场景相对较少</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="复制代码" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes OneLight dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">axios</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    method</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;head&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    url</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#986801;--shiki-dark:#4FC1FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#0184BC;--shiki-dark:#D4D4D4;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;/api/check&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    headers</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">then</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;">&#39;检查资源状态成功&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_7-options-请求" tabindex="-1">7. OPTIONS 请求 <a class="header-anchor" href="#_7-options-请求" aria-label="Permalink to &quot;7. OPTIONS 请求&quot;">​</a></h3><p><strong>使用场景：</strong></p><ul><li>CORS 预检请求</li><li>检查服务器支持的请求方法</li><li>检查服务器功能是否可用</li></ul><p><strong>优点：</strong></p><ul><li>用于跨域请求的预检</li><li>可以探测服务器能力</li><li>有助于接口文档生成</li></ul><p><strong>缺点：</strong></p><ul><li>增加额外的网络请求</li><li>主要用于浏览器自动发起</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="复制代码" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes OneLight dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">axios</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    method</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;options&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    url</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#986801;--shiki-dark:#4FC1FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#0184BC;--shiki-dark:#D4D4D4;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;/api/options&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">    headers</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">})</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">then</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">res</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;">&#39;获取服务器支持的HTTP方法&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_8-并发请求" tabindex="-1">8. 并发请求 <a class="header-anchor" href="#_8-并发请求" aria-label="Permalink to &quot;8. 并发请求&quot;">​</a></h3><p><strong>使用场景：</strong></p><ul><li>页面初始化需要多个接口数据</li><li>多个独立但相关的数据请求</li><li>需要同时处理多个异步操作</li></ul><p><strong>优点：</strong></p><ul><li>提高请求效率</li><li>避免回调地狱</li><li>统一的错误处理</li></ul><p><strong>缺点：</strong></p><ul><li>任一请求失败都会触发 catch</li><li>需要合理控制并发数量</li><li>增加代码复杂度</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="复制代码" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes OneLight dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#6A9955;--shiki-dark-font-style:inherit;">// 同时发起多个请求</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#9CDCFE;">axios</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">all</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">([</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">        axios</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">            method</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;get&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">            url</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#9CDCFE;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#986801;--shiki-dark:#4FC1FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#0184BC;--shiki-dark:#D4D4D4;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;/api/data1&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">        }),</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">        axios</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">            method</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;get&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#9CDCFE;">            url</span><span style="--shiki-light:#0184BC;--shiki-dark:#9CDCFE;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;"> process</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#9CDCFE;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#986801;--shiki-dark:#4FC1FF;">VUE_APP_BASE_API</span><span style="--shiki-light:#0184BC;--shiki-dark:#D4D4D4;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;"> &#39;/api/data2&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    ])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">then</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">        axios</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">spread</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">res1</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">res2</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">            console</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;">&#39;所有请求完成&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">((</span><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#569CD6;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#9CDCFE;">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#DCDCAA;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#CE9178;">&#39;某个请求失败&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D4D4D4;">    });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,80)]))}const c=i(p,[["render",h]]);export{g as __pageData,c as default};
